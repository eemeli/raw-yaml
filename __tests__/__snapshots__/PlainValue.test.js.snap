// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse #comments bare 1`] = `
PlainValue {
  "commentRange": Range {
    "end": 17,
    "start": 2,
  },
  "range": Range {
    "end": 17,
    "start": 0,
  },
  "raw": "",
  "rawComment": "comment # here!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 17,
    "start": 17,
  },
}
`;

exports[`parse #comments complex mapping key 1`] = `
PlainValue {
  "commentRange": Range {
    "end": 19,
    "start": 4,
  },
  "range": Range {
    "end": 20,
    "start": 2,
  },
  "raw": "",
  "rawComment": "comment # here!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 20,
    "start": 19,
  },
}
`;

exports[`parse #comments indented block 1`] = `
PlainValue {
  "commentRange": Range {
    "end": 23,
    "start": 8,
  },
  "range": Range {
    "end": 24,
    "start": 6,
  },
  "raw": "",
  "rawComment": "comment # here!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 24,
    "start": 23,
  },
}
`;

exports[`parse #comments newline before & after 1`] = `
PlainValue {
  "commentRange": Range {
    "end": 18,
    "start": 3,
  },
  "range": Range {
    "end": 19,
    "start": 1,
  },
  "raw": "",
  "rawComment": "comment # here!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 19,
    "start": 18,
  },
}
`;

exports[`parse #comments seq value 1`] = `
PlainValue {
  "commentRange": Range {
    "end": 19,
    "start": 4,
  },
  "range": Range {
    "end": 20,
    "start": 2,
  },
  "raw": "",
  "rawComment": "comment # here!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 20,
    "start": 19,
  },
}
`;

exports[`parse multi-line plain bare 1`] = `
PlainValue {
  "range": Range {
    "end": 49,
    "start": 0,
  },
  "raw": ":first#
      ? :multi line
  
      	plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 49,
    "start": 0,
  },
}
`;

exports[`parse multi-line plain complex mapping key 1`] = `
PlainValue {
  "range": Range {
    "end": 54,
    "start": 4,
  },
  "raw": ":first#
      ? :multi line
  
      	plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 54,
    "start": 4,
  },
}
`;

exports[`parse multi-line plain flow seq value 1`] = `
PlainValue {
  "range": Range {
    "end": 54,
    "start": 4,
  },
  "raw": ":first#
      ? :multi line
  
      	plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 54,
    "start": 4,
  },
}
`;

exports[`parse multi-line plain indented block 1`] = `
PlainValue {
  "range": Range {
    "end": 56,
    "start": 6,
  },
  "raw": ":first#
      ? :multi line
  
      	plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 56,
    "start": 6,
  },
}
`;

exports[`parse multi-line plain newline before & after 1`] = `
PlainValue {
  "range": Range {
    "end": 51,
    "start": 1,
  },
  "raw": ":first#
      ? :multi line
  
      	plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 51,
    "start": 1,
  },
}
`;

exports[`parse multi-line plain seq value 1`] = `
PlainValue {
  "range": Range {
    "end": 52,
    "start": 2,
  },
  "raw": ":first#
      ? :multi line
  
      	plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 52,
    "start": 2,
  },
}
`;

exports[`parse multi-line plain with comment 1`] = `
PlainValue {
  "commentRange": Range {
    "end": 20,
    "start": 5,
  },
  "range": Range {
    "end": 63,
    "start": 3,
  },
  "raw": "? :multi line
  
      	plain value",
  "rawComment": "comment # here!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 63,
    "start": 20,
  },
}
`;

exports[`parse multi-line plain with props 1`] = `
PlainValue {
  "anchor": "anchor",
  "range": Range {
    "end": 66,
    "start": 2,
  },
  "raw": ":first#
      ? :multi line
  
      	plain value",
  "tag": "tag!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 66,
    "start": 16,
  },
}
`;

exports[`parse single-line plain bare 1`] = `
PlainValue {
  "range": Range {
    "end": 11,
    "start": 0,
  },
  "raw": "plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 11,
    "start": 0,
  },
}
`;

exports[`parse single-line plain complex mapping key 1`] = `
PlainValue {
  "range": Range {
    "end": 14,
    "start": 2,
  },
  "raw": "plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 14,
    "start": 2,
  },
}
`;

exports[`parse single-line plain empty 1`] = `
PlainValue {
  "range": Range {
    "end": 3,
    "start": 2,
  },
  "raw": "",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 3,
    "start": 2,
  },
}
`;

exports[`parse single-line plain empty in flow 1`] = `
PlainValue {
  "range": Range {
    "end": 6,
    "start": 5,
  },
  "raw": "",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 6,
    "start": 6,
  },
}
`;

exports[`parse single-line plain escaped 1`] = `
PlainValue {
  "range": Range {
    "end": 6,
    "start": 0,
  },
  "raw": "-#:] ,",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 6,
    "start": 0,
  },
}
`;

exports[`parse single-line plain escaped in flow 1`] = `
PlainValue {
  "range": Range {
    "end": 3,
    "start": 0,
  },
  "raw": "-#:",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 3,
    "start": 0,
  },
}
`;

exports[`parse single-line plain flow seq value 1`] = `
PlainValue {
  "range": Range {
    "end": 14,
    "start": 2,
  },
  "raw": "plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 14,
    "start": 2,
  },
}
`;

exports[`parse single-line plain indented block 1`] = `
PlainValue {
  "range": Range {
    "end": 18,
    "start": 6,
  },
  "raw": "plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 18,
    "start": 6,
  },
}
`;

exports[`parse single-line plain newline before & after 1`] = `
PlainValue {
  "range": Range {
    "end": 13,
    "start": 1,
  },
  "raw": "plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 13,
    "start": 1,
  },
}
`;

exports[`parse single-line plain seq value 1`] = `
PlainValue {
  "range": Range {
    "end": 14,
    "start": 2,
  },
  "raw": "plain value",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 14,
    "start": 2,
  },
}
`;

exports[`parse single-line plain with comment 1`] = `
PlainValue {
  "commentRange": Range {
    "end": 31,
    "start": 16,
  },
  "range": Range {
    "end": 31,
    "start": 3,
  },
  "raw": "plain value",
  "rawComment": "comment # here!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 14,
    "start": 3,
  },
}
`;

exports[`parse single-line plain with props 1`] = `
PlainValue {
  "anchor": "anchor",
  "range": Range {
    "end": 28,
    "start": 2,
  },
  "raw": "plain value",
  "tag": "tag!",
  "type": "PLAIN",
  "valueRange": Range {
    "end": 28,
    "start": 16,
  },
}
`;
