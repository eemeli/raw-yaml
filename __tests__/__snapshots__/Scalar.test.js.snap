// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse "quoted" bare 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 7,
    "start": 0,
  },
  "src": "\\"value\\"",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 7,
    "start": 0,
  },
}
`;

exports[`parse "quoted" complex mapping key 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 10,
    "start": 2,
  },
  "src": "? \\"value\\" : ",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse "quoted" escaped 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 34,
    "start": 1,
  },
  "src": "
\\" #value\\\\\\\\
with \\\\\\"more\\\\\\" lines\\\\\\"\\"
",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 34,
    "start": 1,
  },
}
`;

exports[`parse "quoted" flow seq value 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 10,
    "start": 2,
  },
  "src": "[ \\"value\\" ]",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse "quoted" indented block 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 13,
    "start": 6,
  },
  "src": "    - \\"value\\"
  x",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 13,
    "start": 6,
  },
}
`;

exports[`parse "quoted" multi-line 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 24,
    "start": 1,
  },
  "src": "
\\"value
with
more lines\\"
",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 24,
    "start": 1,
  },
}
`;

exports[`parse "quoted" newline before & after 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 8,
    "start": 1,
  },
  "src": "
\\"value\\"
",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 8,
    "start": 1,
  },
}
`;

exports[`parse "quoted" seq value 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 9,
    "start": 2,
  },
  "src": "- \\"value\\"
- ",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse "quoted" with comment 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": Range {
    "end": 27,
    "start": 12,
  },
  "nodeRange": Range {
    "end": 27,
    "start": 3,
  },
  "src": "
  \\"value\\" #comment # here!
",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 10,
    "start": 3,
  },
}
`;

exports[`parse "quoted" without spaces 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 8,
    "start": 1,
  },
  "src": "{\\"value\\",",
  "tag": null,
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 8,
    "start": 1,
  },
}
`;

exports[`parse 'quoted' bare 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 7,
    "start": 0,
  },
  "src": "'value'",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 7,
    "start": 0,
  },
}
`;

exports[`parse 'quoted' complex mapping key 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 10,
    "start": 2,
  },
  "src": "? 'value' : ",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse 'quoted' escaped 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 32,
    "start": 1,
  },
  "src": "
' #value
with ''more'' lines'''
",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 32,
    "start": 1,
  },
}
`;

exports[`parse 'quoted' flow seq value 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 10,
    "start": 2,
  },
  "src": "[ 'value' ]",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse 'quoted' indented block 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 13,
    "start": 6,
  },
  "src": "    - 'value'
  x",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 13,
    "start": 6,
  },
}
`;

exports[`parse 'quoted' multi-line 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 24,
    "start": 1,
  },
  "src": "
'value
with
more lines'
",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 24,
    "start": 1,
  },
}
`;

exports[`parse 'quoted' newline before & after 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 8,
    "start": 1,
  },
  "src": "
'value'
",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 8,
    "start": 1,
  },
}
`;

exports[`parse 'quoted' seq value 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 9,
    "start": 2,
  },
  "src": "- 'value'
- ",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse 'quoted' with comment 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": Range {
    "end": 27,
    "start": 12,
  },
  "nodeRange": Range {
    "end": 27,
    "start": 3,
  },
  "src": "
  'value' #comment # here!
",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 10,
    "start": 3,
  },
}
`;

exports[`parse 'quoted' without spaces 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 8,
    "start": 1,
  },
  "src": "{'value',",
  "tag": null,
  "type": "SINGLE",
  "valueRange": Range {
    "end": 8,
    "start": 1,
  },
}
`;

exports[`parse *alias bare 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 6,
    "start": 0,
  },
  "src": "*alias",
  "tag": null,
  "type": "ALIAS",
  "valueRange": Range {
    "end": 6,
    "start": 1,
  },
}
`;

exports[`parse *alias complex mapping key 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 9,
    "start": 2,
  },
  "src": "? *alias : ",
  "tag": null,
  "type": "ALIAS",
  "valueRange": Range {
    "end": 8,
    "start": 3,
  },
}
`;

exports[`parse *alias flow seq value 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 9,
    "start": 2,
  },
  "src": "[ *alias ]",
  "tag": null,
  "type": "ALIAS",
  "valueRange": Range {
    "end": 8,
    "start": 3,
  },
}
`;

exports[`parse *alias indented block 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 12,
    "start": 6,
  },
  "src": "    - *alias
  x",
  "tag": null,
  "type": "ALIAS",
  "valueRange": Range {
    "end": 12,
    "start": 7,
  },
}
`;

exports[`parse *alias newline before & after 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 7,
    "start": 1,
  },
  "src": "
*alias
",
  "tag": null,
  "type": "ALIAS",
  "valueRange": Range {
    "end": 7,
    "start": 2,
  },
}
`;

exports[`parse *alias seq value 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": null,
  "nodeRange": Range {
    "end": 8,
    "start": 2,
  },
  "src": "- *alias
- ",
  "tag": null,
  "type": "ALIAS",
  "valueRange": Range {
    "end": 8,
    "start": 3,
  },
}
`;

exports[`parse *alias with comment 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": null,
  "commentRange": Range {
    "end": 26,
    "start": 11,
  },
  "nodeRange": Range {
    "end": 26,
    "start": 3,
  },
  "src": "
  *alias #comment # here!
",
  "tag": null,
  "type": "ALIAS",
  "valueRange": Range {
    "end": 9,
    "start": 4,
  },
}
`;

exports[`parse >block bare 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": ">",
  "commentRange": null,
  "nodeRange": Range {
    "end": 34,
    "start": 0,
  },
  "src": ">
      #multiline
  
      	block",
  "tag": null,
  "type": "BLOCK",
  "valueRange": Range {
    "end": 34,
    "start": 2,
  },
}
`;

exports[`parse >block complex mapping key 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": ">",
  "commentRange": null,
  "nodeRange": Range {
    "end": 38,
    "start": 4,
  },
  "src": "  ? >
      #multiline
  
      	block
: ",
  "tag": null,
  "type": "BLOCK",
  "valueRange": Range {
    "end": 38,
    "start": 6,
  },
}
`;

exports[`parse >block flow seq value 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": ">",
  "commentRange": null,
  "nodeRange": Range {
    "end": 38,
    "start": 4,
  },
  "src": "  [ >
      #multiline
  
      	block
]",
  "tag": null,
  "type": "BLOCK",
  "valueRange": Range {
    "end": 38,
    "start": 6,
  },
}
`;

exports[`parse >block indented block 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": ">",
  "commentRange": null,
  "nodeRange": Range {
    "end": 40,
    "start": 6,
  },
  "src": "    - >
      #multiline
  
      	block
  x",
  "tag": null,
  "type": "BLOCK",
  "valueRange": Range {
    "end": 40,
    "start": 8,
  },
}
`;

exports[`parse >block literal with header 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": "|+2",
  "commentRange": null,
  "nodeRange": Range {
    "end": 39,
    "start": 3,
  },
  "src": "
- |+2
      #multiline
  
      	block
",
  "tag": null,
  "type": "BLOCK",
  "valueRange": Range {
    "end": 39,
    "start": 7,
  },
}
`;

exports[`parse >block newline before & after 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": ">",
  "commentRange": null,
  "nodeRange": Range {
    "end": 35,
    "start": 1,
  },
  "src": "
>
      #multiline
  
      	block
",
  "tag": null,
  "type": "BLOCK",
  "valueRange": Range {
    "end": 35,
    "start": 3,
  },
}
`;

exports[`parse >block seq value 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": ">",
  "commentRange": null,
  "nodeRange": Range {
    "end": 36,
    "start": 2,
  },
  "src": "- >
      #multiline
  
      	block
- ",
  "tag": null,
  "type": "BLOCK",
  "valueRange": Range {
    "end": 36,
    "start": 4,
  },
}
`;

exports[`parse >block with comment 1`] = `
Scalar {
  "anchor": null,
  "blockStyle": ">",
  "commentRange": Range {
    "end": 21,
    "start": 6,
  },
  "nodeRange": Range {
    "end": 54,
    "start": 3,
  },
  "src": "
  > #comment # here!
      #multiline
  
      	block
",
  "tag": null,
  "type": "BLOCK",
  "valueRange": Range {
    "end": 54,
    "start": 22,
  },
}
`;
