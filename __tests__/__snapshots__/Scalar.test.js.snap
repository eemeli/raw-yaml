// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse "quoted" bare 1`] = `
Scalar {
  "range": Range {
    "end": 7,
    "start": 0,
  },
  "raw": "\\"value\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 7,
    "start": 0,
  },
}
`;

exports[`parse "quoted" complex mapping key 1`] = `
Scalar {
  "range": Range {
    "end": 10,
    "start": 2,
  },
  "raw": "\\"value\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse "quoted" escaped 1`] = `
Scalar {
  "range": Range {
    "end": 34,
    "start": 1,
  },
  "raw": "\\" #value\\\\\\\\
with \\\\\\"more\\\\\\" lines\\\\\\"\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 34,
    "start": 1,
  },
}
`;

exports[`parse "quoted" flow seq value 1`] = `
Scalar {
  "range": Range {
    "end": 10,
    "start": 2,
  },
  "raw": "\\"value\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse "quoted" indented block 1`] = `
Scalar {
  "range": Range {
    "end": 13,
    "start": 6,
  },
  "raw": "\\"value\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 13,
    "start": 6,
  },
}
`;

exports[`parse "quoted" multi-line 1`] = `
Scalar {
  "range": Range {
    "end": 24,
    "start": 1,
  },
  "raw": "\\"value
with
more lines\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 24,
    "start": 1,
  },
}
`;

exports[`parse "quoted" newline before & after 1`] = `
Scalar {
  "range": Range {
    "end": 8,
    "start": 1,
  },
  "raw": "\\"value\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 8,
    "start": 1,
  },
}
`;

exports[`parse "quoted" seq value 1`] = `
Scalar {
  "range": Range {
    "end": 9,
    "start": 2,
  },
  "raw": "\\"value\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse "quoted" with comment 1`] = `
Scalar {
  "commentRange": Range {
    "end": 27,
    "start": 12,
  },
  "range": Range {
    "end": 27,
    "start": 3,
  },
  "raw": "\\"value\\"",
  "rawComment": "comment # here!",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 10,
    "start": 3,
  },
}
`;

exports[`parse "quoted" with props 1`] = `
Scalar {
  "anchor": "anchor",
  "range": Range {
    "end": 23,
    "start": 2,
  },
  "raw": "\\"value\\"",
  "tag": "tag!",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 23,
    "start": 16,
  },
}
`;

exports[`parse "quoted" without spaces 1`] = `
Scalar {
  "range": Range {
    "end": 8,
    "start": 1,
  },
  "raw": "\\"value\\"",
  "type": "DOUBLE",
  "valueRange": Range {
    "end": 8,
    "start": 1,
  },
}
`;

exports[`parse %directives TAG 1`] = `
Scalar {
  "range": Range {
    "end": 30,
    "start": 0,
  },
  "raw": "TAG !yaml! tag:yaml.org,2002:",
  "type": "DIRECTIVE",
  "valueRange": Range {
    "end": 30,
    "start": 1,
  },
}
`;

exports[`parse %directives YAML with comment 1`] = `
Scalar {
  "commentRange": Range {
    "end": 18,
    "start": 11,
  },
  "range": Range {
    "end": 18,
    "start": 0,
  },
  "raw": "YAML 1.2",
  "rawComment": "comment",
  "type": "DIRECTIVE",
  "valueRange": Range {
    "end": 9,
    "start": 1,
  },
}
`;

exports[`parse 'quoted' bare 1`] = `
Scalar {
  "range": Range {
    "end": 7,
    "start": 0,
  },
  "raw": "'value'",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 7,
    "start": 0,
  },
}
`;

exports[`parse 'quoted' complex mapping key 1`] = `
Scalar {
  "range": Range {
    "end": 10,
    "start": 2,
  },
  "raw": "'value'",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse 'quoted' escaped 1`] = `
Scalar {
  "range": Range {
    "end": 32,
    "start": 1,
  },
  "raw": "' #value
with ''more'' lines'''",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 32,
    "start": 1,
  },
}
`;

exports[`parse 'quoted' flow seq value 1`] = `
Scalar {
  "range": Range {
    "end": 10,
    "start": 2,
  },
  "raw": "'value'",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse 'quoted' indented block 1`] = `
Scalar {
  "range": Range {
    "end": 13,
    "start": 6,
  },
  "raw": "'value'",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 13,
    "start": 6,
  },
}
`;

exports[`parse 'quoted' multi-line 1`] = `
Scalar {
  "range": Range {
    "end": 24,
    "start": 1,
  },
  "raw": "'value
with
more lines'",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 24,
    "start": 1,
  },
}
`;

exports[`parse 'quoted' newline before & after 1`] = `
Scalar {
  "range": Range {
    "end": 8,
    "start": 1,
  },
  "raw": "'value'",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 8,
    "start": 1,
  },
}
`;

exports[`parse 'quoted' seq value 1`] = `
Scalar {
  "range": Range {
    "end": 9,
    "start": 2,
  },
  "raw": "'value'",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 9,
    "start": 2,
  },
}
`;

exports[`parse 'quoted' with comment 1`] = `
Scalar {
  "commentRange": Range {
    "end": 27,
    "start": 12,
  },
  "range": Range {
    "end": 27,
    "start": 3,
  },
  "raw": "'value'",
  "rawComment": "comment # here!",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 10,
    "start": 3,
  },
}
`;

exports[`parse 'quoted' with props 1`] = `
Scalar {
  "anchor": "anchor",
  "range": Range {
    "end": 23,
    "start": 2,
  },
  "raw": "'value'",
  "tag": "tag!",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 23,
    "start": 16,
  },
}
`;

exports[`parse 'quoted' without spaces 1`] = `
Scalar {
  "range": Range {
    "end": 8,
    "start": 1,
  },
  "raw": "'value'",
  "type": "SINGLE",
  "valueRange": Range {
    "end": 8,
    "start": 1,
  },
}
`;

exports[`parse *alias bare 1`] = `
Scalar {
  "range": Range {
    "end": 6,
    "start": 0,
  },
  "raw": "alias",
  "type": "ALIAS",
  "valueRange": Range {
    "end": 6,
    "start": 1,
  },
}
`;

exports[`parse *alias complex mapping key 1`] = `
Scalar {
  "range": Range {
    "end": 9,
    "start": 2,
  },
  "raw": "alias",
  "type": "ALIAS",
  "valueRange": Range {
    "end": 8,
    "start": 3,
  },
}
`;

exports[`parse *alias flow seq value 1`] = `
Scalar {
  "range": Range {
    "end": 9,
    "start": 2,
  },
  "raw": "alias",
  "type": "ALIAS",
  "valueRange": Range {
    "end": 8,
    "start": 3,
  },
}
`;

exports[`parse *alias indented block 1`] = `
Scalar {
  "range": Range {
    "end": 12,
    "start": 6,
  },
  "raw": "alias",
  "type": "ALIAS",
  "valueRange": Range {
    "end": 12,
    "start": 7,
  },
}
`;

exports[`parse *alias newline before & after 1`] = `
Scalar {
  "range": Range {
    "end": 7,
    "start": 1,
  },
  "raw": "alias",
  "type": "ALIAS",
  "valueRange": Range {
    "end": 7,
    "start": 2,
  },
}
`;

exports[`parse *alias seq value 1`] = `
Scalar {
  "range": Range {
    "end": 8,
    "start": 2,
  },
  "raw": "alias",
  "type": "ALIAS",
  "valueRange": Range {
    "end": 8,
    "start": 3,
  },
}
`;

exports[`parse *alias with comment 1`] = `
Scalar {
  "commentRange": Range {
    "end": 26,
    "start": 11,
  },
  "range": Range {
    "end": 26,
    "start": 3,
  },
  "raw": "alias",
  "rawComment": "comment # here!",
  "type": "ALIAS",
  "valueRange": Range {
    "end": 9,
    "start": 4,
  },
}
`;

exports[`parse *alias with props 1`] = `
Scalar {
  "anchor": "anchor",
  "range": Range {
    "end": 22,
    "start": 2,
  },
  "raw": "alias",
  "tag": "tag!",
  "type": "ALIAS",
  "valueRange": Range {
    "end": 22,
    "start": 17,
  },
}
`;
